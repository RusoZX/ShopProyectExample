package shopServer.Services;

import generated.General;
import generated.serviceMakeRestockGrpc;
import io.grpc.stub.StreamObserver;

import java.util.ArrayList;

//First we create a class that extends the one generated by the proto file
public class AddRestockService extends serviceMakeRestockGrpc.serviceMakeRestockImplBase{
    //We create the object that is gonna work with the data base
    DataBase db = new DataBase();

    @Override
    public void giveResponseMakeRestock(General.ClientPetitionMakeRestock request,
                                        StreamObserver<General.ServerResponseMakeRestock> responseObserver){
        System.out.println("<----------------------ADD RESTOCK REQUEST-------------------------------------->");
        General.ServerResponseMakeRestock response;
        try{
            //First we display in the log the restock that we are going to add to the DB
            System.out.println("Inserting a new restock:\n"+request.getIdOwner()+", "+request.getIdProduct()
                    +", "+request.getDate()+", "+request.getQuantity());
            //Then we add the restock to his table
            db.modify("Insert into restock (idUser, idProduct, date, quantity) values('"
                    +request.getIdOwner()+"', '" +request.getIdProduct() +"', '"+request.getDate()+"', '"
                    +request.getQuantity()+"');");

            //Now we get the actual quantity of the product
            int quantity = Integer.parseInt(db.consult("Select unitsInExistence from product where idProduct = "
                    +request.getIdProduct()+";").get(0).get(0).toString());

            //Now we add the restock
            quantity += request.getQuantity();

            //Then we add the quantity into product
            db.modify("Update product set unitsInExistence = '"+quantity+"' where idProduct = "
                    + request.getIdProduct()+";");
            response= General.ServerResponseMakeRestock.newBuilder()
                    .setStatusCode(General.ServerResponseMakeRestock.StatusCode.OK).build();
            responseObserver.onNext(response);
            responseObserver.onCompleted();
        }catch(Exception e){
            System.out.println("/////////////////////////////////ADD RESTOCK ERROR//////////////////////////////////\n"+
                    e.getLocalizedMessage());
            //As there was some kind of error we create a response with and Status Code explaining to the Client that
            //there was an error in the server
            response = General.ServerResponseMakeRestock.newBuilder()
                    .setStatusCode(General.ServerResponseMakeRestock.StatusCode.SERVER_ERROR)
                    .build();
            responseObserver.onNext(response);
            responseObserver.onCompleted();
        }
    }
}
